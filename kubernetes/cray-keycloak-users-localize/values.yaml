#
# MIT License
#
# (C) Copyright 2020-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
image:
  repository: artifactory.algol60.net/csm-docker/stable/cray-keycloak-setup
  tag: 3.9.0
  pullPolicy: Always

# Determines how many times the Job will retry running the localize pod.
# If it takes longer for things to be ready this can be increased.
backoffLimit: 3

# Contains the creds for connecting to keycloak as the master administrator.
keycloakMasterAdminSecretName: keycloak-master-admin-auth

# The name of a secret that keycloak-setup creates when it's gotten far enough for the localization tool to run.
keycloakSetupSecretName: admin-client-auth

# If local users should be created, this secret contains the spec for the local users.
# If this secret doesn't exist then local users will not be created.
localUsersSecretName: keycloak-config-local-users

# If local groups should be created, this secret contains the spec for the local groups.
# If this secret doesn't exist then local groups will not be created.
localGroupsConfigMapName: keycloak-config-local-groups

# Contains the creds for connecting to the s3-style storage, exported users and groups files will be written here.
userStorageSecretName: wlm-s3-credentials

keycloakBase: http://cray-keycloak-http/keycloak

# A list of sealedSecrets passed in to be deployed.
sealedSecrets: []

ldapProviderId: "ldap"
ldapFederationName: "shasta-user-federation-ldap"
ldapPriority: "1"
ldapEditMode: "READ_ONLY"
ldapSyncRegistrations: "false"
ldapVendor: "other"
ldapUsernameLDAPAttribute: "uid"
ldapRdnLDAPAttribute: "uid"
ldapUuidLDAPAttribute: "uid"
ldapUserObjectClasses: "posixAccount"
ldapAuthType: "none"
ldapSearchBase: "cn=default"
ldapSearchScope: "2"
ldapUseTruststoreSpi: "ldapsOnly"
ldapConnectionPooling: "true"
ldapPagination: "true"
ldapAllowKerberosAuthentication: "false"
ldapBatchSizeForSync: "4000"
ldapFullSyncPeriod: "-1"
ldapChangedSyncPeriod: "-1"
ldapDebug: "true"
ldapEnabled: "true"

ldapUserAttributeMappers:
  - "uidNumber"
  - "gidNumber"
  - "loginShell"
  - "homeDirectory"

ldapUserAttributeMappersToRemove: []

ldapGroupNameLDAPAttribute: "cn"
ldapGroupObjectClass: "posixGroup"
ldapPreserveGroupInheritance: "false"
ldapMembershipLDAPAttribute: "memberUid"
ldapMembershipAttributeType: "UID"
ldapMembershipUserLDAPAttribute: "uid"
ldapGroupsLDAPFilter: ""
ldapUserRolesRetrieveStrategy: "LOAD_GROUPS_BY_MEMBER_ATTRIBUTE"
ldapMappedGroupAttributes: "cn,gidNumber,memberUid"
ldapDropNonExistingGroupsDuringSync: "false"

ldapDoFullSync: "true"

ldapRoleMapperDn: ""
ldapRoleMapperRoleNameLDAPAttribute: "cn"
ldapRoleMapperRoleObjectClasses: "groupOfNames"
ldapRoleMapperLDAPAttribute: "member"
ldapRoleMapperMemberAttributeType: "DN"
ldapRoleMapperUserLDAPAttribute: "sAMAccountName"
ldapRoleMapperRolesLDAPFilter: ""
ldapRoleMapperMode: "READ_ONLY"
ldapRoleMapperStrategy: "LOAD_ROLES_BY_MEMBER_ATTRIBUTE"
ldapRoleMapperMemberOfLDAPAttribute: "memberOf"
ldapRoleMapperUseRealmRolesMapping: "false"
ldapRoleMapperClientId: "shasta"

userExportUsersConfigmap: keycloak-users
userExportGroupsConfigmap: keycloak-groups
keycloak_ceph_secret: wlm-s3-credentials
userExportStorageUrl: http://rgw-vip.nmn
userExportStorageBucket: wlm
userExportStoragePasswdObject: etc/passwd
userExportStorageGroupsObject: etc/group
userExportNamespaces:
  - user
  - default

userExportNameSource: "username"
  # The username stored in Keycloak is normalized to lowercase.
  # If this is set to "homeDirectory" the username in the generated passwd file
  # is built by pulling the last element from the homeDirectory path. This can
  # be used to create a passwd file that preserves the case of the username.

userExportGroups: "true"

localRoleAssignments: []
