{{/*
MIT License

(C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/}}
{{- if .Values.postgresDbBackup.enabled -}}

{{- if .Values.postgresDbBackup.serviceAccount.create -}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "cray-keycloak.postgresqlDbBackupServiceAccountName" . }}
  labels:
    {{- include "cray-keycloak.labels" . | nindent 4 }}
  {{- with .Values.postgresDbBackup.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ include "cray-keycloak.postgresqlDbBackupFullname" . }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "cray-keycloak.postgresqlDbBackupFullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ include "cray-keycloak.postgresqlDbBackupServiceAccountName" . }}
roleRef:
  kind: Role
  name: {{ include "cray-keycloak.postgresqlDbBackupFullname" . }}
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "cray-keycloak.postgresqlDbBackupFullname" . }}
  labels:
    {{- include "cray-keycloak.labels" . | nindent 4 }}
spec:
  schedule: "{{ .Values.postgresDbBackup.schedule }}"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          {{- with .Values.postgresDbBackup.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "cray-keycloak.postgresqlDbBackupServiceAccountName" . }}
          securityContext:
            {{- toYaml .Values.postgresDbBackup.podSecurityContext | nindent 12 }}
          containers:
            - name: postgresql-backup
              securityContext:
                {{- toYaml .Values.postgresDbBackup.securityContext | nindent 16 }}
              image: "{{ .Values.postgresDbBackup.image.repository }}:{{ .Values.postgresDbBackup.image.tag | default "latest" }}"
              imagePullPolicy: {{ .Values.postgresDbBackup.image.pullPolicy }}
              resources:
                {{- toYaml .Values.postgresDbBackup.resources | nindent 16 }}
              env:
              - name: DB_NAME
                value: keycloak-postgres
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: USERS
                value: '["service_account"]'
              - name: PGHOST
                value: keycloak-postgres
              - name: PGPORT
                value: "5432"
              - name: PGDATABASE
                value: service_db
              - name: PGUSER
                valueFrom:
                  secretKeyRef:
                    key: username
                    name: postgres.keycloak-postgres.credentials
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: postgres.keycloak-postgres.credentials
              - name: STORAGE_ENDPOINT
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.postgresDbBackup.storageSecret }}
                    key: s3_endpoint
              - name: STORAGE_TLS_VERIFY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.postgresDbBackup.storageSecret }}
                    key: ssl_validate
              - name: STORAGE_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.postgresDbBackup.storageSecret }}
                    key: access_key
              - name: STORAGE_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.postgresDbBackup.storageSecret }}
                    key: secret_key
              - name: STORAGE_BUCKET
                value: {{ .Values.postgresDbBackup.storageBucket }}
          {{- with .Values.postgresDbBackup.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgresDbBackup.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgresDbBackup.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: Never

{{- end }}
