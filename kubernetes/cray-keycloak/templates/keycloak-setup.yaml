{{/*
MIT License

(C) Copyright 2022 Hewlett Packard Enterprise Development LP

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/}}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: keycloak-setup

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: secret-creator
rules:
  - apiGroups: [""]
    resources: [secrets]
    verbs: [get, create, patch, delete]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: keycloak-setup
subjects:
  - kind: ServiceAccount
    name: keycloak-setup
    namespace: services
roleRef:
  kind: ClusterRole
  name: secret-creator
  apiGroup: rbac.authorization.k8s.io

---
kind: Job
apiVersion: batch/v1
metadata:
  name: keycloak-setup-{{ .Release.Revision }}
  labels:
    {{- include "cray-keycloak.labels" . | nindent 4 }}
spec:
  # TTL set to maximum the field supports; effectively infinite or 68 years
  ttlSecondsAfterFinished: 2147483647
  template:
    spec:
      serviceAccountName: keycloak-setup
      restartPolicy: OnFailure
      containers:
      - name: keycloak-setup
        image: {{ .Values.setup.image.repository }}:{{ .Values.setup.image.tag | default (include "cray-keycloak.app-version" . ) }}
        imagePullPolicy: {{ .Values.setup.image.pullPolicy }}
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          runAsNonRoot: true
        env:
        - name: KEYCLOAK_BASE
          value: "http://{{ .Values.setup.keycloak.service }}:8080/keycloak"
        - name: OAUTHLIB_INSECURE_TRANSPORT  # Tell oauthlib to allow http. istio protects the channel
          value: "1"
        - name: CLUSTER_KEYCLOAK_BASE
          value: "https://{{ .Values.setup.keycloak.clusterGw.dnsName }}{{ .Values.setup.keycloak.clusterGw.route }}"
        - name: KEYCLOAK_GATEKEEPER_PROXIED_HOSTS
          value: |
            {{ .Values.setup.keycloak.gatekeeper.proxiedHosts | toJson }}
        - name: KEYCLOAK_CUSTOMER_ACCESS_URL
          value: "{{ .Values.setup.keycloak.customerAccessUrl }}"
          # Admin Client
        - name: KEYCLOAK_ADMIN_CLIENT_ID
          value: "{{ .Values.setup.keycloak.adminClient.id }}"
        - name: KEYCLOAK_ADMIN_CLIENT_SECRET_NAME
          value: "{{ .Values.setup.keycloak.adminClient.secret.name }}"
        - name: KEYCLOAK_ADMIN_CLIENT_SECRET_NAMESPACES
          value: |
            {{ .Values.setup.keycloak.adminClient.secret.namespaces | toJson }}
        # System: compute client, used for things like compute
        # node boot and operation, should be deprecated when SPIRE tooling
        # gets implemented/the cray-token service is deprecated.
        - name: KEYCLOAK_SYSTEM_COMPUTE_CLIENT_ID
          value: "{{ .Values.setup.keycloak.systemComputeClient.id }}"
        - name: KEYCLOAK_SYSTEM_COMPUTE_CLIENT_SECRET_NAME
          value: "{{ .Values.setup.keycloak.systemComputeClient.secret.name }}"
        - name: KEYCLOAK_SYSTEM_COMPUTE_CLIENT_SECRET_NAMESPACES
          value: |
            {{ .Values.setup.keycloak.systemComputeClient.secret.namespaces | toJson }}
        # System pxe client, used to obtain a service account token
        # for use in ipxe image chaining
        - name: KEYCLOAK_SYSTEM_PXE_CLIENT_ID
          value: "{{ .Values.setup.keycloak.systemPXEClient.id }}"
        - name: KEYCLOAK_SYSTEM_PXE_CLIENT_SECRET_NAME
          value: "{{ .Values.setup.keycloak.systemPXEClient.secret.name }}"
        - name: KEYCLOAK_SYSTEM_PXE_CLIENT_SECRET_NAMESPACES
          value: |
            {{ .Values.setup.keycloak.systemPXEClient.secret.namespaces | toJson }}
        # System nexus client, used to obtain a service account token
        # by the Nexus Keycloak plugin during authentication.
        - name: KEYCLOAK_SYSTEM_NEXUS_CLIENT_ID
          value: "{{ .Values.setup.keycloak.systemNexusClient.id }}"
        - name: KEYCLOAK_SYSTEM_NEXUS_CLIENT_SECRET_NAME
          value: "{{ .Values.setup.keycloak.systemNexusClient.secret.name }}"
        - name: KEYCLOAK_SYSTEM_NEXUS_CLIENT_SECRET_NAMESPACES
          value: |
            {{ .Values.setup.keycloak.systemNexusClient.secret.namespaces | toJson }}
        # Gatekeeper client
        - name: KEYCLOAK_GATEKEEPER_CLIENT_ID
          value: "{{ .Values.setup.keycloak.gatekeeper.client.id }}"
        - name: KEYCLOAK_GATEKEEPER_CLIENT_SECRET_NAME
          value: "{{ .Values.setup.keycloak.gatekeeper.client.secret.name }}"
        - name: KEYCLOAK_GATEKEEPER_CLIENT_SECRET_NAMESPACES
          value: |
            {{ .Values.setup.keycloak.gatekeeper.client.secret.namespaces | toJson }}
        # System Slingshot client, used to obtain a service account token
        # by the Slingshot Fabric Manager Northbound API consumers
        - name: KEYCLOAK_SYSTEM_CLIENT_CLIENT_ID
          value: "{{ .Values.setup.keycloak.systemSlingshotClient.id }}"
        - name: KEYCLOAK_SYSTEM_SLINGSHOT_CLIENT_SECRET_NAME
          value: "{{ .Values.setup.keycloak.systemSlingshotClient.secret.name }}"
        - name: KEYCLOAK_SYSTEM_SLINGSHOT_CLIENT_SECRET_NAMESPACES
          value: |
            {{ .Values.setup.keycloak.systemSlingshotClient.secret.namespaces | toJson }}

        # WLM client
        - name: KEYCLOAK_WLM_CLIENT_ID
          value: "{{ .Values.setup.keycloak.wlmClient.id }}"
        - name: KEYCLOAK_WLM_CLIENT_SECRET_NAME
          value: "{{ .Values.setup.keycloak.wlmClient.secret.name }}"
        - name: KEYCLOAK_WLM_CLIENT_SECRET_NAMESPACES
          value: |
            {{ .Values.setup.keycloak.wlmClient.secret.namespaces | toJson }}

        # Other clients
        - name: KEYCLOAK_CLIENTS
          value: |
            {{ .Values.setup.keycloak.clients | toJson }}

        volumeMounts:
        - name: keycloak-master-admin-auth-vol
          mountPath: /mnt/keycloak-master-admin-auth-vol
      volumes:
      - name: keycloak-master-admin-auth-vol
        secret:
          secretName: {{ .Values.setup.keycloak.masterAdminSecretName }}
